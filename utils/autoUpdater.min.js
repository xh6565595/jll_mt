"use strict";
Object.defineProperty(exports, "__esModule", {
	value: !0
});
var _maskView, _contentView, _downloadTask, _loadingProgress, _screenHeight, _screenWidth, _config = {
		logoUrl: "/static/updatedIcon.png",
		releaseNotes: "",
		noteAglin: "left",
		loadingColor: "#ff6666",
		cancelText: "\u53D6\u6D88",
		cancelColor: "#000000",
		confirmText: "\u5347\u7EA7",
		confirmColor: "#ff6666",
		windowHeight: 360,
		packageUrl: "",
		browser: false
	},
	_calculatePosition = function() {
		var d = (_screenHeight - _config.windowHeight) / 2,
			a = .3 * _screenWidth / 2,
			b = _screenWidth - 2 * a;
		return {
			top: d,
			left: a,
			width: b,
			right: a
		}
	},
	_createMask = function() {
		_maskView = new plus.nativeObj.View("maskView", {
			top: "0px",
			left: "0px",
			width: "100%",
			height: "100%",
			backgroundColor: "rgba(0,0,0,0.6)"
		})
	},
	_createContentView = function(ifForce) {
		var d = _calculatePosition();
		_contentView = new plus.nativeObj.View("contentView", {
			top: d.top + "px",
			left: d.left + "px",
			height: _config.windowHeight + "px",
			width: d.width + "px"
		}), _contentView.drawRect({
			color: "rgba(0,0,0,0)",
			backgroundColor:"rgba(0,0,0,0)",
			radius: "10px"
		}, {
			width: "100%",
			height: "100%"
		}, "roundedRect");
		
		var a = (d.width - 50) / 2;
		_contentView.drawBitmap(_config.logoUrl, {}, {
			top: "0px",
			height: _config.windowHeight + "px",
			width: d.width + "px",
			left: "0px",
		}, "autoUpdaterIcon"), _contentView.drawText(_config.releaseNotes, {
			height: _config.windowHeight - 120 + "px",
			left: "10px",
			right: "10px",
			top: "200px"
		}, {
			size: "14px",
			color: "#2f2f2f",
			align: _config.noteAglin,
			verticalAlign: "top",
			whiteSpace: "normal",
			overflow: "ellipsis"
		}, "autoUpdaterContent"), _createLoading(-2);
		var b = _config.windowHeight - 50 + 15;
		if(!ifForce){
			_contentView.drawRichText("<font style=\"font-size:14px;\" color=\"" + _config.cancelColor + "\">" + _config.cancelText +
				"</font>", {
					width: "50%",
					top: b + "px",
					left: "0px"
				}, {
					align: "center",
					onClick: function() {
						// uni.redirectTo({
						// 	url:'/pages/main/main'
						// })
						close()
					}
				}, "cancel"), _contentView.drawRichText("<font color=\"" + _config.confirmColor + "\" style=\"font-size:14px;\">" +
				_config.confirmText + "</font>", {
					width: "50%",
					right: "0px",
					top: b + "px"
				}, {
					align: "center",
					onClick: function() {
						_config.packageUrl ? _config.browser ? (plus.runtime.openURL(_config.packageUrl),
					close()) : _createTask() : uni.showToast({
							title: "\u5B89\u88C5\u5305\u5730\u5740\u4E3A\u7A7A",
							icon: "none"
						})
					}
				}, "submit")
		}
		
	},
	_createLoading = function(h) {
		var a = _calculatePosition(),
			b = _config.windowHeight - 60,
			c = (a.width - 120) / 2,
			d = 0 <= h ? (a.width - 100) / 100 * h : 0;
		d = parseInt(d);
		var i = 100 <= h ? "\u4E0B\u8F7D\u5B8C\u6210" : "\u4E0B\u8F7D\u4E2D...",
			f = "";
		f = -1 == h ? "\u8D44\u6E90\u52A0\u8F7D\u4E2D..." : 0 <= h ? i + "(" + h + "%)" : "", _contentView.drawRect({
			color: _config.loadingColor
		}, {
			width: d + "px",
			height: "3px",
			left: "10px",
			top: b + 8 + "px"
		}, "loading"), _contentView.drawRichText("<font color=\"" + _config.loadingColor + "\">" + f + "</font>", {
			width: "100px",
			top: b + "px",
			left: d + "px"
		}, {
			align: "center"
		}, "loadingText")
	},
	_createTask = function() {
		// console.log(11111111)
		return _downloadTask ? void console.log("\u6B63\u5728\u4E0B\u8F7D\u4E2D") : void(_createLoading(-1), _downloadTask =
			uni.downloadFile({
				url: _config.packageUrl,
				success: function(c) {
					if (200 === c.statusCode) {
						
						var a = c.tempFilePath;
						uni.saveFile({
							tempFilePath: a,
							success: function(b) {
								console.log(b.savedFilePath)
								plus.runtime.install(b.savedFilePath, {
									force: true
								}, function(){
									plus.nativeUI.toast('即将重启')
									plus.runtime.restart();
									close()
								},function(){
									plus.nativeUI.toast('失败')
									close()
								})
							},
							fail:function(){
								plus.nativeUI.toast('安装失败')
							}
						})
					}else{
						uni.showToast({
							icon:'none',
							title:'错误资源路径' 
						})
						close()
					}
				},
				fail:function(){
					uni.showToast({
						icon:'none',
						title:'下载中断' 
					})
					close()
				}
			}), _downloadTask.onProgressUpdate(function(b) {
				_loadingProgress != b.progress && (_loadingProgress = b.progress, _createLoading(b.progress))
			}))
	},
	init = function(m) {
		var a = m.windowHeight,
			b = m.logo,
			c = m.content,
			d = m.contentAlign,
			e = m.loadingColor,
			f = m.cancel,
			g = m.cancelColor,
			h = m.confirm,
			i = m.confirmColor,
			j = m.packageUrl,
			k = m.browser,
			ifForce = m.ifForce;
		_screenHeight = plus.screen.resolutionHeight, _screenWidth = plus.screen.resolutionWidth, _downloadTask = null, a &&
			(_config.windowHeight = a), b && (_config.logoUrl = b), c && (_config.releaseNotes = c), d && (_config.noteAglin = d),
			e && (_config.loadingColor = e), f && (_config.cancelText = f), g && (_config.cancelColor = g), h && (_config.confirmText =
				h), i && (_config.confirmColor = i), j && (_config.packageUrl = j), k && (_config.browser = k), _createMask(),
			_createContentView(ifForce)
	},
	show = function(ifForce = false) {
		_maskView && _maskView.show(), _contentView && _contentView.show();
		if(ifForce){
			// console.log('强制更新')
			_config.packageUrl ? _config.browser ? (plus.runtime.openURL(_config.packageUrl),
				close()) : _createTask() : uni.showToast({
				title: "\u5B89\u88C5\u5305\u5730\u5740\u4E3A\u7A7A",
				icon: "none"
			})
		}
	},
	close = function() {
		_downloadTask && (_downloadTask.abort(), _downloadTask = null, _createLoading(-2)), _maskView && _maskView.hide(),
			_contentView && _contentView.hide()
	};
exports.default = {
	init: init,
	show: show,
	close: close
};
